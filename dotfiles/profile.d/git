#!/bin/bash -e

alias g='git'
alias gb='git branch'
alias gci='git commit'
alias gco='git checkout'
alias gfo='git fetch origin'
alias gs='git status'
alias guci='git reset --soft HEAD^' # undo last commit

github() {
  # Default: open my github if not a git repo
  if ! git rev-parse --is-inside-work-tree ; then
    open "https://github.com/javierjulio"
    return
  fi

  # Figure out github repo base URL
  base_url=$(git config --get remote.origin.url)
  base_url=${base_url%\.git} # remove .git from end of string

  # Fix git@bitbucket.org: URLs
  base_url=${base_url//git@bitbucket.org:/https:\/\/bitbucket\.org\/}

  # Validate that this folder is a git folder
  if ! git branch 2>/dev/null 1>&2; then
    echo Not a git repo!
    exit $?
  fi

  # Find current directory relative to .git parent
  full_path=$(pwd)
  # shellcheck disable=SC2046
  git_base_path=$(cd ./$(git rev-parse --show-cdup) || exit; pwd)
  relative_path=${full_path#$git_base_path} # remove leading git_base_path from working directory

  # If filename argument is present, append it
  if [ "$1" ]; then
    relative_path="$relative_path/$1"
  fi

  # Figure out current git branch
  # git_where=$(command git symbolic-ref -q HEAD || command git name-rev --name-only --no-undefined --always HEAD) 2>/dev/null
  git_where=$(command git name-rev --name-only --no-undefined --always HEAD) 2>/dev/null

  # Remove cruft from branchname
  branch=${git_where#refs\/heads\/}

  [[ $base_url == *bitbucket* ]] && tree="src" || tree="tree"
  url="$base_url/$tree/$branch$relative_path"

  open "$url"
}
